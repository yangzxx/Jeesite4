
#======================================#
#========== Project settings ==========#
#======================================#

# 产品或项目名称、软件开发公司名称
productName: JeeSite Cloud
companyName: ThinkGem

# 产品版本、版权年份
productVersion: V4.2
copyrightYear: 2020

#是否演示模式
demoMode: false

#======================================#
#========== Server settings ===========#
#======================================#

server:

  servlet:
    context-path: /js
  tomcat:
    uri-encoding: UTF-8
    
#======================================#
#========== Cloud settings ============#
#======================================#

# 服务注册
eureka:

  # 实例设置
  instance:
    # 实例状态监控参数
    homePageUrl: ${server.servlet.context-path}
    statusPageUrlPath: ${server.servlet.context-path}/actuator
    healthCheckUrlPath: ${server.servlet.context-path}/actuator/health
    
  # 从服务器注册表中获取注册信息的时间间隔（秒）
  client:
    registryFetchIntervalSeconds: 5
    
# 声明式服务
feign:

  # 开启okhttp客户端
  okhttp:
    enabled: true
  httpclient:
    enabled: false
    
  # 容错限流断路器
  hystrix:
    enabled: false
  sentinel:
    enabled: true
    
  # 请求和响应GZIP压缩支持
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true

  # 调试模式
  debug: false

# 启用负载均衡
ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  OkToRetryOnAllOperations: false
  MaxAutoRetriesNextServer: 0
  MaxAutoRetries: 0

# 延迟容错机制
hystrix:
  command:
    default:
      execution:
        isolation:
          # 隔离策略（THREAD、SEMAPHORE）
          strategy: THREAD
          # 线程超时时间（毫秒）
          thread:
            timeoutInMilliseconds: 60000

# 微服务列表
service:
  core:
    name: jeesite-cloud-module-core
    path: ${server.servlet.context-path}
  test1:
    name: jeesite-cloud-module-test1
    path: ${server.servlet.context-path}
  test2:
    name: jeesite-cloud-module-test2
    path: ${server.servlet.context-path}
  
#======================================#
#========== Database sttings ==========#
#======================================#

# 数据库连接
jdbc: 
  
  # Mysql 数据库配置
  type: mysql
  driver: com.mysql.cj.jdbc.Driver
  url: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC
  username: root
  password: 123456
  testSql: SELECT 1

  # 数据库连接池配置
  pool:
  
    # 初始化连接数
    init: 1
    # 最小连接数
    minIdle: 3
    # 最大连接数
    maxActive: 20
  # 多数据源名称列表，启用方式：@MyBatisDao(dataSourceName="ds2")
  dataSourceNames: ds2
  
  # 多数据源配置：ds2
  ds2:
    type: mysql
    driver: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/jeesite2?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC
    username: root
    password: 123456
    testSql: SELECT 1
    encrypt:
      username: false
      password: true
    pool:
      init: 1
      minIdle: 3
      maxActive: 20

  # JTA 分布式事务
  jta:
    enabled: false
    
  # LCN 分布式事务
  lcn:
    enabled: true
    
# 分布式事务管理地址
tx-lcn:
  client:
    # tx-manager 的配置地址，可以指定TM集群中的任何一个或多个地址
    # tx-manager 下集群策略，每个TC都会从始至终<断线重连>与TM集群保持集群大小个连接。
    # TM方，每有TM进入集群，会找到所有TC并通知其与新TM建立连接。
    # TC方，启动时按配置与集群建立连接，成功后，会再与集群协商，查询集群大小并保持与所有TM的连接
    manager-address: 127.0.0.1:8070
    # 调用链长度等级，默认值为3（优化选项。系统中每个请求大致调用链平均长度，估算值。）
    chain-level: 3
    # 该参数为事务方法注解切面的orderNumber，默认值为0.
    dtx-aspect-order: 0
    # 该参数为事务连接资源方法切面的orderNumber，默认值为0.
    resource-order: 0
  
  # 开启TX-LCN重写的负载策略
  springcloud.loadbalance.enabled: true
    
  # 是否启动LCN负载均衡策略(优化选项，开启与否，功能不受影响)
  ribbon.loadbalancer.dtx.enabled: true
  
  # 该参数是分布式事务框架存储的业务切面信息。采用的是h2数据库。绝对路径。该参数默认的值为{user.dir}/.txlcn/{application.name}-{application.port}
  # aspect.log.file-path: ${user.dir}/.txlcn/${spring.application.name}-${server.port}
  
  # RpcConfig
  message.netty:
    # 断线重连次数，默认值为8.
    reconnect-count: 100
    # 重连延迟时间(ms)，默认值为6000.
    reconnect-delay: 10000
    
  # 是否开启日志记录。当开启以后需要配置对应logger的数据库连接配置信息。
  logger:
    enabled: true
    driver-class-name: ${jdbc.driver}
    jdbc-url: ${jdbc.url}
    username: ${jdbc.username}
    password: ${jdbc.password}
    
#======================================#
#========== Spring settings ===========#
#======================================#

spring:
  
  # 当前环境名称（注意：不可设置为 test 它是单元测试专用的名称）
  profiles:
    active: default
    
  # Consul 服务发现
  cloud:
    consul:
      discovery:
        healthCheckPath: ${server.servlet.context-path}/actuator/health
        healthCheckInterval: 15s
        
    # 流量防卫兵
    sentinel:
      transport:
        port: 9311
        dashboard: 127.0.0.1:9311
      # 流量防卫兵 Nacos 数据源
      datasource:
        ds2.nacos:
          server-addr: 127.0.0.1:8848
          data-id: ${spring.application.name}-sentinel
          group-id: jeesite-cloud-42
          rule-type: flow
        
  # Spring Boot Admin 服务监控中心：https://codecentric.github.io/spring-boot-admin/2.0.6
  boot:
    admin:
      client:
        url: http://127.0.0.1:9511
        instance:
          prefer-ip: true
          management:
            context-path: ${server.servlet.context-path}
        
  # Zipkin 服务链路追踪
  zipkin:
    base-url: http://127.0.0.1:9411
    
  # Redis 连接参数 （RedisProperties）
  redis:
    host: 127.0.0.1
    port: 6379
    ssl: false
    database: 0
    password: 1234
    timeout: 2000
    lettuce:
      pool:
        # 最大空闲连接数
        maxIdle: 3
        # 最大活动连接数
        maxActive: 20

  # 缓存配置
  cache:
    # 缓存及会话共享（专业版）
    isClusterMode: true
    # 清理全部缓存按钮所清理的缓存列表
    clearNames: sysCache,corpCache,userCache,cmsCache
  
  # 消息队列服务
#  rabbitmq:
#    host: 192.168.11.103
#    port: 8976
#    username: admin
#    password: admin123

# 日志配置
logging:
  level:
    root: warn
    com.codingapi.txlcn: debug

#======================================#
#========== System settings ===========#
#======================================#

# 管理基础路径
adminPath: /a

# 用户相关
user:
  # 多租户模式（SAAS模式）（专业版）
  useCorpModel: false
  
# 菜单管理
menu:
  # 根据模块状态去更新相连的菜单状态（仅作为微服务时设为false）
  updateStatusByModuleStatus: false

# 国际化管理（专业版+）
lang:
  enabled: false
  
# 任务调度（个人版+）
job:
  enabled: false

#======================================#
#========= Framework settings =========#
#======================================#

# Shiro 相关配置
shiro:

  # 登录提交信息加密（如果不需要加密，设置为空即可）
  loginSubmit:
    
    # 登录提交信息安全Key，加密用户名、密码、验证码，后再提交（key设置为3个，用逗号分隔）
    secretKey: ~
  
  # 是否允许跨域访问，如果允许，设置允许的域名，全部域名设置*号，如果不允许，此设置应该为空
  accessControlAllowOrigin: '*'
  
  # 内部系统访问过滤器，可设置多个允许的内部系统IP地址串，多个用逗号隔开
  innerFilterAllowRemoteAddrs: 127.0.0.1,10.,172.,192.
  
  # URI 权限过滤器定义
  filterChainDefinitions: |
    /inner/api/** = inner
    /api/** = user
    ${adminPath}/** = user
  
# MyBatis 相关
mybatis:

  # @MyBatisDao、Aliases 扫描基础包，如果多个，用“,”分隔
  scanBasePackage: com.jeesite.modules
  
# Web 相关
web:
  
  # 核心模块的Web功能（仅作为微服务时设为false）
  core: 
    enabled: false

# Session 相关
session:

  # 全局会话超时，单位：毫秒， 20m=1200000ms, 30m=1800000ms, 60m=3600000ms, 12h=43200000ms, 1day=86400000ms
  # 注意：如果超时超过30m，你还需要同步修改 j2cache.properties 文件的 caffeine.region.sessionCache 超时时间，大于这个值。
  sessionTimeout: 1800000
  
  # 手机APP设备会话超时参数设置，登录请求参数加 param_deviceType=mobileApp 时有效
  mobileAppSessionTimeout: 43200000
  
  # 定时清理失效会话，清理用户直接关闭浏览器造成的孤立会话
  sessionTimeoutClean: 1200000
  
  # 会话唯一标识SessionId在Cookie中的名称。
  sessionIdCookieName: jeesite.session.id
  sessionIdCookiePath: ${server.servlet.context-path}
  
# 错误页面500.html是否输出错误信息（正式环境，为提供安全性可设置为false）
error:
  page:
    printErrorInfo: true

#======================================#
#======== FileUpload settings =========#
#======================================#

file:
  enabled: true

  # 文件上传根路径，设置路径中不允许包含“userfiles”，在指定目录中系统会自动创建userfiles目录，如果不设置默认为contextPath路径
#  baseDir: D:/jeesite

#======================================#
#========== Project settings ==========#
#======================================#
